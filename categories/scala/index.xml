<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on Anthony Galea</title>
    <link>http://www.anthony-galea.com/categories/scala/</link>
    <description>Recent content in Scala on Anthony Galea</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Sep 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.anthony-galea.com/categories/scala/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Template Method Pattern</title>
      <link>http://www.anthony-galea.com/blog/post/the-template-method-pattern/</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.anthony-galea.com/blog/post/the-template-method-pattern/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;Template Method&lt;/code&gt; pattern is a &lt;code&gt;behavioral design pattern&lt;/code&gt; commonly used when a number of algorithms have a common skeleton but they vary in the specifics of the steps. In this article we will write implementations for a simple example in Java, Scala, Kotlin and Clojure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As an example consider arithmetic and geometric progressions in mathematics. \$3, 5, 7, 9, 11...\$ is an example of an arithmetic progression which has the generic form: \$a, a+f, a+2f, a+3f...\$ with \$a=3, f=2\$. An example of a geometric progression is \$3, 6, 12, 24, 48...\$ which has the generic form of: \$a, af, af^2, af^3...\$ with \$a=3, f=2\$. Now say we have the task of writing \$n\$ values from a progression to stdout. We could implement this as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;ArithmeticProgression&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;++)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;tok-n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;GeometricProgression&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;++)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;tok-n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Notice that for both progressions we need the &lt;code&gt;for loop&lt;/code&gt; and the call to &lt;code&gt;println&lt;/code&gt;. The difference is in the calculation of the nth value. So we could extract the common part to an abstract class:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;Progression&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;++)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;tok-n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;nth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;nth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and then extend the abstract class for each progression type, overriding the abstract method with the specific version for the algorithm:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;ArithmeticProgression&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Progression&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;nth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;GeometricProgression&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Progression&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;nth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Notice that by doing this we have cleanly separated the two concerns of:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;iterating and printing values (in the parent)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;calculating the nth value (in the children)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;i.e. we get separation of concerns via subclassing. When the &lt;code&gt;output&lt;/code&gt; function is called it delegates the calculation to the correct &lt;code&gt;nth&lt;/code&gt; function in the child class:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Progression&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;arithmeticProgression&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;ArithmeticProgression&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;artithmeticProgression&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;//3, 5, 7, 9, 11&lt;/span&gt;

&lt;span class=&#34;tok-n&#34;&gt;Progression&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;geometricProgression&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;GeometricProgression&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;geometricProgression&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;//3, 6, 12, 24, 48&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In Scala the separation of concerns can be achieved using function composition. We start by defining the functions to calculate the nth values for both progression types:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;arithmeticNth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nl&#34;&gt;a:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-nl&#34;&gt;f:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-nl&#34;&gt;n:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;

&lt;span class=&#34;tok-n&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;geometricNth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nl&#34;&gt;a:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-nl&#34;&gt;f:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-nl&#34;&gt;n:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;scala&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;toInt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We then define a function that takes one of these two functions as a parameter:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;outputProgression&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nl&#34;&gt;a:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt;
                      &lt;span class=&#34;tok-nl&#34;&gt;f:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt;
                      &lt;span class=&#34;tok-nl&#34;&gt;c:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt;
                      &lt;span class=&#34;tok-nl&#34;&gt;nth:&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;nth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;tok-n&#34;&gt;outputProgression&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;arithmeticNth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;//3, 5, 7, 9, 11&lt;/span&gt;

&lt;span class=&#34;tok-n&#34;&gt;outputProgression&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;geometricNth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;//3, 6, 12, 24, 48&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Kotlin is pretty similar:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;kotlin&#34;&gt;&lt;span class=&#34;tok-k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;tok-py&#34;&gt;arithmeticNth&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;fun&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;tok-k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;tok-m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;tok-k&#34;&gt;fun&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;toDouble&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;toInt&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;tok-k&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;tok-py&#34;&gt;geometricNth&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;fun&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;tok-k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;tok-m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;tok-k&#34;&gt;fun&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;outputProgression&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;nth&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-m&#34;&gt;1.&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;forEach&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;nth&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;tok-n&#34;&gt;outputProgression&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;arithmeticNth&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;//3, 5, 7, 9, 11&lt;/span&gt;

&lt;span class=&#34;tok-n&#34;&gt;outputProgression&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;geometricNth&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;//3, 6, 12, 24, 48&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Clojure is also pretty much the same:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kd&#34;&gt;defn &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;output-progression&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;nth&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;map &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;println &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;nth &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;range &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;inc &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kd&#34;&gt;defn &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;arithmetic-nth&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;* &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;dec &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-kd&#34;&gt;defn &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;geometric-nth&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;int &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;* &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;Math/pow&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;dec &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;output-progression&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;arithmetic-nth&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; 3, 5, 7, 9, 11&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;output-progression&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;geometric-nth&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; 3, 6, 12, 24, 48&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An Introduction to Load Testing with Gatling</title>
      <link>http://www.anthony-galea.com/blog/post/an-introduction-to-load-testing-with-gatling/</link>
      <pubDate>Sun, 03 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.anthony-galea.com/blog/post/an-introduction-to-load-testing-with-gatling/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Many developers are familiar with the &lt;a href=&#34;http://jmeter.apache.org/&#34;&gt;Apache JMeter&lt;/a&gt; or &lt;a href=&#34;https://httpd.apache.org/docs/2.2/programs/ab.html&#34;&gt;Apache Bench&lt;/a&gt; tools for writing load tests. &lt;a href=&#34;http://gatling.io&#34;&gt;Gatling&lt;/a&gt; is an alternative tool which provides:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a concise Scala DSL in order to &lt;a href=&#34;#describe&#34;&gt;Describe a Load Test&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a simple means to &lt;a href=&#34;#run&#34;&gt;Run a Simulation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a nice html &lt;a href=&#34;#report&#34;&gt;Report&lt;/a&gt; with all the results&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;report&#34;&gt;Report&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let&amp;#8217;s start by looking at the typical output of a Gatling load test. We have overall distribution of response time for the whole load test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-03-gatling-global.png&#34; alt=&#34;2016 01 03 gatling global&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A more detailed response time distribution:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-03-gatling-response-distribution.png&#34; alt=&#34;2016 01 03 gatling response distribution&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Response time percentiles over the duration of the test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-03-gatling-response-time.png&#34; alt=&#34;2016 01 03 gatling response time&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And number of requests per second over the duration of the test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-03-gatling-requests-per-second.png&#34; alt=&#34;2016 01 03 gatling requests per second&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;describe&#34;&gt;Describe a Load Test&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is how we would write a simple load test which performs 50 &lt;code&gt;GET&lt;/code&gt; requests against a server running at &lt;code&gt;test.com&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;SimpleSimulation&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Simulation&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-c1&#34;&gt;//declare a scenario with a simple get request performed 5 times&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;scn&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;scenario&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myScenario&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myRequest&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/page.html&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
            &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;

  &lt;span class=&#34;tok-c1&#34;&gt;//run the scenario with 10 concurrent users&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;setUp&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;scn&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gatling refers to load tests as &lt;code&gt;Simulations&lt;/code&gt; which have one or more &lt;code&gt;Scenarios&lt;/code&gt;. In the one above we are saying we will have 10 users execute 5 requests each in parallel. We could provide a &lt;code&gt;Content-Type&lt;/code&gt; header with the request and check for a &lt;code&gt;200&lt;/code&gt; response code like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myRequest&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/page.html&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;text/html&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we wanted to do a &lt;code&gt;POST&lt;/code&gt; request with a JSON body and basic authentication, as well as verify something in the response:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myRequest&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/someresource&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;StringBody&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myContent&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myValue&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot; }&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;asJSON&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;basicAuth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;$..someField&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;some value&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The expression used to extract &lt;code&gt;someField&lt;/code&gt; from the response is passed to &lt;code&gt;jsonPath()&lt;/code&gt; and is based on &lt;a href=&#34;http://goessner.net/articles/JsonPath/&#34;&gt;Goessner&amp;#8217;s JsonPath syntax&lt;/a&gt;. We use &lt;code&gt;is()&lt;/code&gt; to verify the expected value is equal to &lt;code&gt;some value&lt;/code&gt;. We can also do other forms of verification on the response json like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;not(expectedValue)&lt;/code&gt;: not equal to &lt;code&gt;expectedValue&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in(sequence)&lt;/code&gt;: to check that a value belongs to the given &lt;code&gt;sequence&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;exists()&lt;/code&gt;, &lt;code&gt;notExists()&lt;/code&gt;: to check for the presence/absence of a field&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For a multipart request with 2 parts and gzip compression:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myRequest&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/someresource&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;bodyPart&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;StringBodyPart&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myContent&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myValue&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot; }&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;bodyPart&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;RawFileBodyPart&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;file&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;test.txt&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;processRequestBody&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;gzipBody&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also create scenarios with multiple requests and use the result from previous requests in subsequent requests like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;scenario&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myScenario&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;request1&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/resource1&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;StringBody&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myContent&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;: &amp;quot;&amp;quot;}&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;$..myResponse.guid&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;saveAs&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;guid&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;request2&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/resource2/${guid}&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;StringBody&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;someOtherField&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;: &amp;quot;&amp;quot;}&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;guid&lt;/code&gt; is extracted from the response of the first call using &lt;code&gt;saveAs(&#34;guid&#34;)&lt;/code&gt; and used in the path to the &lt;code&gt;PUT&lt;/code&gt; call.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scenarios can also be run with a ramp up. If we wanted to run the scenario above with 1000 users with a ramp up of 20 seconds we would do:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;setUp&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;scn&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;ramp&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;run&#34;&gt;Run a Simulation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are a number of ways to run Gatling simulations. You can &lt;a href=&#34;http://gatling.io/#/download&#34;&gt;download the bundle&lt;/a&gt;, place your simulations under the &lt;code&gt;user-files/simulations&lt;/code&gt; directory and then run &lt;code&gt;bin/gatling.sh&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you prefer integration with your build system there are plugins for &lt;a href=&#34;http://gatling.io/docs/2.1.7/extensions/maven_plugin.html&#34;&gt;Maven&lt;/a&gt;, &lt;a href=&#34;https://github.com/alphagov/gradle-gatling-plugin&#34;&gt;Gradle&lt;/a&gt; and &lt;a href=&#34;http://gatling.io/docs/2.1.7/extensions/sbt_plugin.html&#34;&gt;SBT&lt;/a&gt;. For example, for Maven we just add the dependencies in the &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.gatling.highcharts&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;gatling-charts-highcharts&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
   &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
     &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
       &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.gatling&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
       &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;gatling-maven-plugin&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
     &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
   &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Place simulations under &lt;code&gt;src/test/scala/com/company/service&lt;/code&gt; and then in the terminal:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;mvn gatling:execute -Dgatling.simulationClass&lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt;com.company.service.YourSimulation&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have found Gatling to be a very effective tool for load testing. The DSL is succinct and the reports generated provide all the information typically needed out of the box. Other alternatives which I have not yet experimented with are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/newsapps/beeswithmachineguns&#34;&gt;Bees with Machine Guns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://locust.io/&#34;&gt;Locust&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>