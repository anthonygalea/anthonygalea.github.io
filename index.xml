<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anthony Galea</title>
    <link>http://www.anthony-galea.com/</link>
    <description>Recent content on Anthony Galea</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Mar 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.anthony-galea.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>An Astronaut&#39;s Guide to Life on Earth - Christian Hadfield</title>
      <link>http://www.anthony-galea.com/blog/post/an-astronauts-guide-to-life-on-earth---christian-hadfield/</link>
      <pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.anthony-galea.com/blog/post/an-astronauts-guide-to-life-on-earth---christian-hadfield/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;Table of Contents&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_on_control_and_attitude&#34;&gt;On Control and Attitude&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_emotion&#34;&gt;On Emotion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_taking_risks_and_having_a_plan&#34;&gt;On taking Risks and having a Plan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_criticism&#34;&gt;On Criticism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_success&#34;&gt;On Success&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_iatrogenics&#34;&gt;On Iatrogenics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_convincing_others&#34;&gt;On Convincing Others&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_knowledge&#34;&gt;On Knowledge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_leadership&#34;&gt;On Leadership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_on_humility&#34;&gt;On Humility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In his book &lt;a href=&#34;https://www.goodreads.com/book/show/18170143-an-astronaut-s-guide-to-life-on-earth&#34;&gt;An Astronaut&amp;#8217;s Guide to Life&lt;/a&gt;, Christian Hadfield presents a collection of sometimes counterintuitive lessons he learned during his career as an astronaut.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It is a fun read interspersed with paragraphs like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;At this point, when your hands are covered with blobs of urine and drops are floating around the bathroom, too, it’s usually helpful to remind yourself that you are doing all this in the name of scientific inquiry.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Below you can find some excerpts that have rang a bell while I was reading it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_control_and_attitude&#34;&gt;On Control and Attitude&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Too many variables are out of my control. There’s really just one thing I can control: my attitude during the journey, which is what keeps me feeling steady and stable, and what keeps me headed in the right direction. So I consciously monitor and correct, if necessary, because losing attitude would be far worse than not achieving my goal.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_emotion&#34;&gt;On Emotion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As I have discovered again and again, things are never as bad (or as good) as they seem at the time.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our training pushes us to develop a new set of instincts: instead of reacting to danger with a fight-or-flight adrenaline rush, we’re trained to respond unemotionally by immediately prioritizing threats and methodically seeking to defuse them. We go from wanting to bolt for the exit to wanting to engage and understand what’s going wrong, then fix it.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you see red, count to 10.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_taking_risks_and_having_a_plan&#34;&gt;On taking Risks and having a Plan&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To me, the only good reason to take a risk is that there’s a decent possibility of a reward that outweighs the hazard.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A lot of people talk about expecting the best but preparing for the worst, but I think that’s a seductively misleading concept. There’s never just one “worst.” Almost always there’s a whole spectrum of bad possibilities. The only thing that would really qualify as the worst would be not having a plan for how to cope.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Part of preparing for the worst is keeping in mind that your sim itself may be based on the wrong assumptions, in which case you’ll draw the wrong, perfectly polished conclusions.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_criticism&#34;&gt;On Criticism&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In any field, it’s a plus if you view criticism as potentially helpful advice rather than as a personal attack.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_success&#34;&gt;On Success&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Early success is a terrible teacher. You’re essentially being rewarded for a lack of preparation, so when you find yourself in a situation where you must prepare, you can’t do it. You don’t know how.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_iatrogenics&#34;&gt;On Iatrogenics&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just as a panel of hairdressers is likely to recommend that you change your hairstyle, a panel of surgeons is likely to recommend surgery.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_convincing_others&#34;&gt;On Convincing Others&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can present all the random sample studies you want to prove that it’s safe to walk under a ladder, but a superstitious person will still avoid that ladder.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_knowledge&#34;&gt;On Knowledge&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You don’t yet know what you don’t know—and regardless of your abilities, your experience and your level of authority, there will definitely be something you don’t know.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_leadership&#34;&gt;On Leadership&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ultimately, leadership is not about glorious crowning acts. It’s about keeping your team focused on a goal and motivated to do their best to achieve it, especially when the stakes are high and the consequences really matter. It is about laying the groundwork for others’ success, and then standing back and letting them shine.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_on_humility&#34;&gt;On Humility&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The most important lessons I’ve learned &amp;#8230;&amp;#8203; to value the wisdom of humility, as well as the sense of perspective it gives you.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Solutions to 4clojure Elementary Problems</title>
      <link>http://www.anthony-galea.com/blog/post/solutions-to-4clojure-elementary-problems/</link>
      <pubDate>Wed, 16 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.anthony-galea.com/blog/post/solutions-to-4clojure-elementary-problems/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this post I will share solutions to the elementary problems I solved on &lt;a href=&#34;http://www.4clojure.com&#34;&gt;4clojure&lt;/a&gt;. You can find all the solutions on &lt;a href=&#34;https://github.com/anthonygalea/solutions-4clojure&#34;&gt;github&lt;/a&gt;. If you have any suggestions/alternative solutions I would love to hear from you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_solutions&#34;&gt;Solutions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_1_nothing_but_the_truth&#34;&gt;1. Nothing but the Truth&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; This is a clojure form.&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; Enter a value which will make the form evaluate to true.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;tok-nv&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_2_simple_math&#34;&gt;2. Simple Math&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; If you are not familiar with polish notation, simple arithmetic might seem confusing.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;- &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;* &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_3_intro_to_strings&#34;&gt;3. Intro to Strings&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Clojure strings are Java strings.&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; This means that you can use any of the Java string methods on Clojure strings.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;.toUpperCase&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;HELLO WORLD&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_4_intro_to_lists&#34;&gt;4. Intro to Lists&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Lists can be constructed with either a function or a quoted form.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;list &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_5_lists_conj&#34;&gt;5. Lists: conj&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; When operating on a list, the conj function will return a new list with one or more items &amp;quot;added&amp;quot; to the front.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;conj &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;conj &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_6_intro_to_vectors&#34;&gt;6. Intro to Vectors&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Vectors can be constructed several ways. You can compare them with lists.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;list &lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;vec&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;vector &lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_7_vectors_conj&#34;&gt;7. Vectors: conj&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; When operating on a Vector, the conj function will return a new vector with one or more items &amp;quot;added&amp;quot; to the end.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;conj &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;conj &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_8_intro_to_sets&#34;&gt;8. Intro to Sets&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Sets are collections of unique values.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;set &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:d&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:d&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;clojure.set/union&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:d&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}))&lt;/span&gt;

&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:d&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_9_sets_conj&#34;&gt;9. Sets: conj&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; When operating on a set, the conj function returns a new set with one or more keys &amp;quot;added&amp;quot;.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;conj &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_10_intro_to_maps&#34;&gt;10. Intro to Maps&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Maps store key-value pairs.&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; Both maps and keywords can be used as lookup functions.&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; Commas can be used to make maps more readable, but they are not required.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;hash-map &lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}))&lt;/span&gt;

&lt;span class=&#34;tok-mi&#34;&gt;20&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_11_maps_conj&#34;&gt;11. Maps: conj&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; When operating on a map, the conj function returns a new map with one or more key-value pairs &amp;quot;added&amp;quot;.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;conj &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_12_intro_to_sequences&#34;&gt;12. Intro to Sequences&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; All Clojure collections support sequencing.&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; You can operate on sequences with functions like first, second, and last.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;first &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;second &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;last &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;list &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_13_sequences_rest&#34;&gt;13. Sequences: rest&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; The rest function will return all the items of a sequence except the first.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;rest &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_14_intro_to_functions&#34;&gt;14. Intro to Functions&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Clojure has many different ways to create functions.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;fn &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;add-five&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;fn &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;partial + &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-mi&#34;&gt;8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_15_double_down&#34;&gt;15. Double Down&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Write a function which doubles a number.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;tok-nb&#34;&gt;* &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_16_hello_world&#34;&gt;16. Hello World&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Write a function which returns a personalized greeting.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Dave&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Hello, Dave!&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Jenn&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Hello, Jenn!&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Rhea&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Hello, Rhea!&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;fn &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;str &lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Hello, &amp;quot;&lt;/span&gt; &lt;span class=&#34;tok-nb&#34;&gt;name &lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_17_sequences_map&#34;&gt;17. Sequences: map&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; The map function takes two arguments: a function (f) and a sequence (s). Map returns a new sequence consisting of the result of applying f to each item of s. Do not confuse the map function with the map data structure.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;map &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_18_sequences_filter&#34;&gt;18. Sequences: filter&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; The filter function takes two arguments: a predicate function (f) and a sequence (s). Filter returns a new sequence consisting of all the items of s for which (f item) returns true.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;filter &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_35_local_bindings&#34;&gt;35. Local bindings&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Clojure lets you give local names to values using the special let-form.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;let &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;let &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;- &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;let &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;let &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;/ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))))&lt;/span&gt;

&lt;span class=&#34;tok-mi&#34;&gt;7&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_36_let_it_be&#34;&gt;36. Let it Be&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Can you bind x, y, and z so that these are all true?&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;let &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;let &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;let &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;tok-nv&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_37_regular_expressions&#34;&gt;37. Regular Expressions&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Regex patterns are supported with a special reader macro.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;apply str &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;re-seq &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;[A-Z]+&amp;quot;&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;bA1B3Ce &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;ABC&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_52_intro_to_destructuring&#34;&gt;52. Intro to Destructuring&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Let bindings and function parameter lists support destructuring.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;let &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_57_simple_recursion&#34;&gt;57. Simple Recursion&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; A recursive function is a function which calls itself. This is one of the fundamental techniques used in functional programming.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;fn &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;when &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;conj &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;dec &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_64_intro_to_reduce&#34;&gt;64. Intro to Reduce&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Reduce takes a 2 argument function and an optional starting value. It then applies the function to the first 2 items in the sequence (or the starting value and the first element of the sequence). In the next iteration the function will be called on the previous return value and the next item from the sequence, thus reducing the entire collection to one value. Don&amp;#39;t worry, it&amp;#39;s not as complicated as it sounds.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;reduce &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;reduce &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[]))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;reduce &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]))&lt;/span&gt;

&lt;span class=&#34;tok-nv&#34;&gt;+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_68_recurring_theme&#34;&gt;68. Recurring Theme&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Clojure only has one non-stack-consuming looping construct: recur. Either a function or a loop can be used as the recursion point. Either way, recur rebinds the bindings of the recursion point to the values it is passed. Recur must be called from the tail-position, and calling it elsewhere will result in an error.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;loop &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;
         &lt;span class=&#34;tok-nv&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[]]&lt;/span&gt;
    &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;if &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;recur&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;dec &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;conj &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;
      &lt;span class=&#34;tok-nv&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_71_rearranging_code&#34;&gt;71. Rearranging Code: - &amp;gt;&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; The -&amp;gt; macro threads an expression x through a variable number of forms. First, x is inserted as the second item in the first form, making a list of it if it is not a list already. Then the first form is inserted as the second item in the second form, making a list of that form if necessary. This process continues for all the forms. Using -&amp;gt; can sometimes make your code more readable.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;sort &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;rest &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;reverse &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]))))&lt;/span&gt;
   &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;-&amp;gt; &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;rest&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
   &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;tok-nv&#34;&gt;last&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_72_rearranging_code&#34;&gt;72. Rearranging Code: - &amp;gt; &amp;gt;&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; The -&amp;gt;&amp;gt; macro threads an expression x through a variable number of forms. First, x is inserted as the last item in the first form, making a list of it if it is not a list already. Then the first form is inserted as the last item in the second form, making a list of that form if necessary. This process continues for all the forms. Using -&amp;gt;&amp;gt; can sometimes make your code more readable.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;map inc &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;take &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;drop &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]))))&lt;/span&gt;
   &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;drop &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;take &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;map &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;inc&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
   &lt;span class=&#34;tok-mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;tok-nb&#34;&gt;reduce &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_134_a_nil_key&#34;&gt;134. A nil key&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Write a function which, given a key and map, returns true iff the map contains an entry with that key and its value is nil.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;true? &lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;false? &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;false? &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;fn &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;key &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;if &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;contains? map &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;key &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
  	&lt;span class=&#34;tok-nv&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_145_for_the_win&#34;&gt;145. For the win&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Clojure&amp;#39;s for macro is a tremendously versatile mechanism for producing a sequence based on some other sequence(s). It can take some time to understand how to use it properly, but that investment will be paid back with clear, concise sequence-wrangling later. With that in mind, read over these for expressions and try to see how each of them produces the same result.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;for &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;range &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;tok-ss&#34;&gt;:when&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;rem &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))]&lt;/span&gt;
        &lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;for &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;iterate &lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;tok-ss&#34;&gt;:let&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;inc &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)]&lt;/span&gt;
            &lt;span class=&#34;tok-ss&#34;&gt;:while&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;&amp;lt; &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)]&lt;/span&gt;
        &lt;span class=&#34;tok-nv&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;for &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;partition&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;range &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))]&lt;/span&gt;
        &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;+ &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;17&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;21&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_156_map_defaults&#34;&gt;156. Map Defaults&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; When retrieving values from a map, you can specify default values in case the key is not found:&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:foo&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:bar&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;tok-ss&#34;&gt;:baz&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; However, what if you want the map itself to contain the default values?&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;;; Write a function which takes a default value and a sequence of keys and constructs a map.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:c&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:foo&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:bar&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:foo&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:bar&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-ss&#34;&gt;:a&lt;/span&gt; &lt;span class=&#34;tok-ss&#34;&gt;:b&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]})&lt;/span&gt;

&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;fn &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;zipmap keys &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;repeat &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_161_subset_and_superset&#34;&gt;161. Subset and Superset&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; Set A is a subset of set B, or equivalently B is a superset of A, if A is &amp;quot;contained&amp;quot; inside B. A and B may coincide.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;clojure.set/superset?&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;clojure.set/subset?&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;clojure.set/superset?&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nf&#34;&gt;clojure.set/subset?&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;tok-o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_162_logical_falsity_and_truth&#34;&gt;162. Logical falsity and truth&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;clojure&#34;&gt;&lt;span class=&#34;tok-c1&#34;&gt;;; In Clojure, only nil and false represent the values of logical falsity in conditional tests - anything else is logical truth.&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;if-not &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;if-not &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;if &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;if &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;if &lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;if &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nb&#34;&gt;= &lt;/span&gt;&lt;span class=&#34;tok-nv&#34;&gt;__&lt;/span&gt; &lt;span class=&#34;tok-p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;if &lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;tok-mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;tok-p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;tok-mi&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These set of problems are pretty simple to solve which is excellent if you&amp;#8217;re just getting started with a language. In future posts I will continue with harder problems. If you want to dive deeper into &lt;a href=&#34;https://clojure.org/&#34;&gt;Clojure&lt;/a&gt; check out Daniel Higginbotham&amp;#8217;s book: &lt;a href=&#34;http://www.braveclojure.com/&#34;&gt;Clojure for the Brave and True&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Better APIs with Java Optional</title>
      <link>http://www.anthony-galea.com/blog/post/better-apis-with-java-optional/</link>
      <pubDate>Sun, 17 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.anthony-galea.com/blog/post/better-apis-with-java-optional/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;Table of Contents&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_the_groovy_operator&#34;&gt;The Groovy ?. operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_enter_java_8_optional&#34;&gt;Enter Java 8 Optional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_not_on_java_8&#34;&gt;Not on Java 8?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In java codebases it is very typical to come across code similar to the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;PlaneProvider&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The contract for &lt;code&gt;PlaneProvider.getPlane()&lt;/code&gt; indicates that a &lt;code&gt;Plane&lt;/code&gt; will be returned. Typically a client using this interface would use it writing something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;planeProvider&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;tok-kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;fly&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Notice that if the client doesn&amp;#8217;t perform the null check and a &lt;code&gt;null&lt;/code&gt; is returned by &lt;code&gt;getPlane()&lt;/code&gt; we would get a &lt;code&gt;NullPointerException&lt;/code&gt; at runtime when we call &lt;code&gt;plane.fly()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_groovy_operator&#34;&gt;The Groovy ?. operator&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Groovy provides the &lt;code&gt;?.&lt;/code&gt; operator in an attempt to provide a cleaner way to write the client code:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;planeProvider&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;?.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;fly&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If &lt;code&gt;plane&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; the call to &lt;code&gt;fly()&lt;/code&gt; will not be performed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_enter_java_8_optional&#34;&gt;Enter Java 8 Optional&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using the new &lt;code&gt;Optional&amp;lt;T&amp;gt;&lt;/code&gt; type in Java 8 we could rewrite the &lt;code&gt;PlaneProvider&lt;/code&gt; interface above like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;tok-nn&#34;&gt;java.util.Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;tok-kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;PlaneProvider&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{}&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just by reading the signature of &lt;code&gt;PlaneProvider.getPlane()&lt;/code&gt; we can immediately tell that a plane may or may not be returned. The concrete implementation of &lt;code&gt;PlaneProvider&lt;/code&gt; would use &lt;code&gt;Optional.of(somePlane)&lt;/code&gt; to return a value or &lt;code&gt;Optional.empty()&lt;/code&gt; to indicate what was previously indicated with a &lt;code&gt;null&lt;/code&gt; value:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;RyanairPlaneProvider&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;PlaneProvider&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-n&#34;&gt;havePlane&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the client we can then use &lt;code&gt;Optional.isPresent()&lt;/code&gt; and &lt;code&gt;Optional.get()&lt;/code&gt; to check for the presence of a value and retrieve it if we want, leading to more readable code:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;planeProvider&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;isPresent&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;fly&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;Optional&lt;/code&gt; class provides additional methods which support a more functional style when writing code:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;planeProvider&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;ifPresent&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;fly&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;());&lt;/span&gt;
&lt;span class=&#34;tok-c1&#34;&gt;//or&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;ifPresent&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nl&#34;&gt;Plane:&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;fly&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also model the case where a plane cannot be provided by the &lt;code&gt;PlaneProvider&lt;/code&gt; using &lt;code&gt;orElse()&lt;/code&gt; and using another object &lt;code&gt;sparePlane&lt;/code&gt; as fallback:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;planeProvider&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;orElse&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;sparePlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;fly&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And in the case where we don&amp;#8217;t have any spare planes we can write:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;planeProvider&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;getPlane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;plane&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;orElseThrow&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-nl&#34;&gt;IllegalStateException:&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;fly&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_not_on_java_8&#34;&gt;Not on Java 8?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If for some reason you&amp;#8217;re on a version of Java prior to Java 8 you can still use &lt;code&gt;Optional&lt;/code&gt; by using the &lt;a href=&#34;https://code.google.com/p/guava-libraries/wiki/UsingAndAvoidingNullExplained#Optional&#34;&gt;Guava&lt;/a&gt; library.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The Builder Pattern in Java</title>
      <link>http://www.anthony-galea.com/blog/post/the-builder-pattern-in-java/</link>
      <pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.anthony-galea.com/blog/post/the-builder-pattern-in-java/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;Table of Contents&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_telescoping_constructor_anti_pattern&#34;&gt;Telescoping constructor anti-pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_using_a_javabean&#34;&gt;Using a JavaBean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_using_a_builder&#34;&gt;Using a builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_intellij_idea_refactoring&#34;&gt;IntelliJ IDEA refactoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Builder pattern is a &lt;code&gt;creational design pattern&lt;/code&gt; which can be used to address the telescoping constructor anti-pattern. It accomplishes this by separating the construction of an object from its representation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_telescoping_constructor_anti_pattern&#34;&gt;Telescoping constructor anti-pattern&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This pattern arises when there are multiple ways of constructing an object, usually because some properties are optional. You can see that as the number of fields for an object increases, the number of constructors we need to provide can grow exponentially:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;tok-c1&#34;&gt;//required&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;tok-c1&#34;&gt;//optional&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;tok-c1&#34;&gt;//optional&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;surname&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;surname&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_using_a_javabean&#34;&gt;Using a JavaBean&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of providing constructors we could write a JavaBean which exposes getters and setters for each field:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;getFirstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;setFirstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;tok-o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and then only call the setters for the fields we want to set:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Jack&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;tok-n&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;setSurname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Johnson&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The problem with this is that the object may be in an inconsistent state partway through its construction. Also, the JavaBeans pattern doesn&amp;#8217;t allow us to make the class immutable.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_using_a_builder&#34;&gt;Using a builder&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The third option is to use the builder pattern where &lt;code&gt;Person&lt;/code&gt; is only used to represent a person and &lt;code&gt;Person.Builder&lt;/code&gt; is responsible for creating objects of type &lt;code&gt;Person&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-09-builder.png&#34; alt=&#34;2016 01 09 builder&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is how we could add a &lt;code&gt;Builder&lt;/code&gt; to the example above:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;surname&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;tok-n&#34;&gt;Builder&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;firstName&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;lastName&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;tok-k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;tok-k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;tok-kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;createPerson&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;tok-k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;tok-nf&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that the constructor for &lt;code&gt;Person&lt;/code&gt; is private, accessible only to the &lt;code&gt;Builder&lt;/code&gt;. Then we use the builder like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;jack&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;Builder&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Jack&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Johnson&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
                                        &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;createPerson&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As you can see the client works with a fluent API, that is very easy to write. It is immediately clear that &lt;code&gt;name&lt;/code&gt; is a required parameter and &lt;code&gt;lastName&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; are optional.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_intellij_idea_refactoring&#34;&gt;IntelliJ IDEA refactoring&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;IntelliJ has a nice &lt;a href=&#34;https://www.jetbrains.com/idea/help/replace-constructor-with-builder.html&#34;&gt;Replace Constructor with Builder&lt;/a&gt; refactoring which allows you to quickly generate a builder and replace the existing constructor call:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-09-refactor-constructor-with-builder.png&#34; alt=&#34;2016 01 09 refactor constructor with builder&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you generate the builder you can also use the &lt;a href=&#34;https://www.jetbrains.com/idea/help/move-refactorings.html&#34;&gt;Move Refactoring&lt;/a&gt; to make it an inner class of the class for which it generates an object:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-09-move.png&#34; alt=&#34;2016 01 09 move&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find this pattern and many other good practices for Java described in the book &lt;a href=&#34;https://www.goodreads.com/book/show/105099.Effective_Java_Programming_Language_Guide&#34;&gt;Effective Java by Joshua Bloch&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An Introduction to Load Testing with Gatling</title>
      <link>http://www.anthony-galea.com/blog/post/an-introduction-to-load-testing-with-gatling/</link>
      <pubDate>Sun, 03 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.anthony-galea.com/blog/post/an-introduction-to-load-testing-with-gatling/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;Table of Contents&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#report&#34;&gt;Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#describe&#34;&gt;Describe a Load Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#run&#34;&gt;Run a Simulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Many developers are familiar with the &lt;a href=&#34;http://jmeter.apache.org/&#34;&gt;Apache JMeter&lt;/a&gt; or &lt;a href=&#34;https://httpd.apache.org/docs/2.2/programs/ab.html&#34;&gt;Apache Bench&lt;/a&gt; tools for writing load tests. &lt;a href=&#34;http://gatling.io&#34;&gt;Gatling&lt;/a&gt; is an alternative tool which provides:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a concise Scala DSL in order to &lt;a href=&#34;#describe&#34;&gt;Describe a Load Test&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a simple means to &lt;a href=&#34;#run&#34;&gt;Run a Simulation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a nice html &lt;a href=&#34;#report&#34;&gt;Report&lt;/a&gt; with all the results&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;report&#34;&gt;Report&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let&amp;#8217;s start by looking at the typical output of a Gatling load test. We have overall distribution of response time for the whole load test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-03-gatling-global.png&#34; alt=&#34;2016 01 03 gatling global&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A more detailed response time distribution:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-03-gatling-response-distribution.png&#34; alt=&#34;2016 01 03 gatling response distribution&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Response time percentiles over the duration of the test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-03-gatling-response-time.png&#34; alt=&#34;2016 01 03 gatling response time&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And number of requests per second over the duration of the test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;http://www.anthony-galea.com/images/2016-01-03-gatling-requests-per-second.png&#34; alt=&#34;2016 01 03 gatling requests per second&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;describe&#34;&gt;Describe a Load Test&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is how we would write a simple load test which performs 50 &lt;code&gt;GET&lt;/code&gt; requests against a server running at &lt;code&gt;test.com&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;tok-nc&#34;&gt;SimpleSimulation&lt;/span&gt; &lt;span class=&#34;tok-kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;Simulation&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;tok-c1&#34;&gt;//declare a scenario with a simple get request performed 5 times&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;scn&lt;/span&gt; &lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;tok-n&#34;&gt;scenario&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myScenario&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myRequest&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/page.html&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
            &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;

  &lt;span class=&#34;tok-c1&#34;&gt;//run the scenario with 10 concurrent users&lt;/span&gt;
  &lt;span class=&#34;tok-n&#34;&gt;setUp&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;scn&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;tok-o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Gatling refers to load tests as &lt;code&gt;Simulations&lt;/code&gt; which have one or more &lt;code&gt;Scenarios&lt;/code&gt;. In the one above we are saying we will have 10 users execute 5 requests each in parallel. We could provide a &lt;code&gt;Content-Type&lt;/code&gt; header with the request and check for a &lt;code&gt;200&lt;/code&gt; response code like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myRequest&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/page.html&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;text/html&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we wanted to do a &lt;code&gt;POST&lt;/code&gt; request with a JSON body and basic authentication, as well as verify something in the response:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myRequest&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/someresource&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;StringBody&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myContent&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myValue&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot; }&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;asJSON&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;basicAuth&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;$..someField&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;some value&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The expression used to extract &lt;code&gt;someField&lt;/code&gt; from the response is passed to &lt;code&gt;jsonPath()&lt;/code&gt; and is based on &lt;a href=&#34;http://goessner.net/articles/JsonPath/&#34;&gt;Goessner&amp;#8217;s JsonPath syntax&lt;/a&gt;. We use &lt;code&gt;is()&lt;/code&gt; to verify the expected value is equal to &lt;code&gt;some value&lt;/code&gt;. We can also do other forms of verification on the response json like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;not(expectedValue)&lt;/code&gt;: not equal to &lt;code&gt;expectedValue&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in(sequence)&lt;/code&gt;: to check that a value belongs to the given &lt;code&gt;sequence&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;exists()&lt;/code&gt;, &lt;code&gt;notExists()&lt;/code&gt;: to check for the presence/absence of a field&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For a multipart request with 2 parts and gzip compression:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myRequest&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/someresource&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;bodyPart&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;StringBodyPart&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myContent&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myValue&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot; }&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;bodyPart&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;RawFileBodyPart&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;file&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;tok-s&#34;&gt;&amp;quot;test.txt&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;processRequestBody&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;gzipBody&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also create scenarios with multiple requests and use the result from previous requests in subsequent requests like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;scenario&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;myScenario&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;request1&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/resource1&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;StringBody&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;myContent&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;: &amp;quot;&amp;quot;}&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;$..myResponse.guid&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;saveAs&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;guid&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)))&lt;/span&gt;
  &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;request2&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;http://test.com/resource2/${guid}&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;StringBody&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;{ &amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;someOtherField&lt;/span&gt;&lt;span class=&#34;tok-s&#34;&gt;&amp;quot;: &amp;quot;&amp;quot;}&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;guid&lt;/code&gt; is extracted from the response of the first call using &lt;code&gt;saveAs(&#34;guid&#34;)&lt;/code&gt; and used in the path to the &lt;code&gt;PUT&lt;/code&gt; call.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Scenarios can also be run with a ramp up. If we wanted to run the scenario above with 1000 users with a ramp up of 20 seconds we would do:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span class=&#34;tok-n&#34;&gt;setUp&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-n&#34;&gt;scn&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;tok-na&#34;&gt;ramp&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;tok-mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;tok-o&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;run&#34;&gt;Run a Simulation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are a number of ways to run Gatling simulations. You can &lt;a href=&#34;http://gatling.io/#/download&#34;&gt;download the bundle&lt;/a&gt;, place your simulations under the &lt;code&gt;user-files/simulations&lt;/code&gt; directory and then run &lt;code&gt;bin/gatling.sh&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you prefer integration with your build system there are plugins for &lt;a href=&#34;http://gatling.io/docs/2.1.7/extensions/maven_plugin.html&#34;&gt;Maven&lt;/a&gt;, &lt;a href=&#34;https://github.com/alphagov/gradle-gatling-plugin&#34;&gt;Gradle&lt;/a&gt; and &lt;a href=&#34;http://gatling.io/docs/2.1.7/extensions/sbt_plugin.html&#34;&gt;SBT&lt;/a&gt;. For example, for Maven we just add the dependencies in the &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.gatling.highcharts&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;gatling-charts-highcharts&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
   &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
     &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
       &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.gatling&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
       &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;gatling-maven-plugin&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
     &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
   &lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
&lt;span class=&#34;tok-nt&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Place simulations under &lt;code&gt;src/test/scala/com/company/service&lt;/code&gt; and then in the terminal:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;mvn gatling:execute -Dgatling.simulationClass&lt;span class=&#34;tok-o&#34;&gt;=&lt;/span&gt;com.company.service.YourSimulation&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have found Gatling to be a very effective tool for load testing. The DSL is succinct and the reports generated provide all the information typically needed out of the box. Other alternatives which I have not yet experimented with are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/newsapps/beeswithmachineguns&#34;&gt;Bees with Machine Guns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://locust.io/&#34;&gt;Locust&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>